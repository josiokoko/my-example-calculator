version: '3.9'
services:
  jenkins:
    build: 
      context: .
    restart: on-failure:10
    container_name: my-jenkins
    ports:
      - 8099:8080
    volumes:
      - ./app-data/jenkins:/var/jenkins_home
      - ./app-data/jenkins-docker-certs:/certs/client:ro
    networks:
      - jenkins-pipeline
    environment:
      - DOCKER_HOST=tcp://docker:2375
      - DOCKER_CERT_PATH=/certs/client
      - DOCKER_TLS_VERIFY=1


  dind:
    image: docker:dind
    container_name: container-dind
    privileged: true
    ports:
      - 2376:2376
    networks:
      - jenkins-pipeline
    volumes:
      - ./app-data/jenkins-docker-certs:/certs/client
      - ./app-data/jenkins:/var/jenkins_home
    environment:
      - DOCKER_TLS_CERTDIR=/certs


  dind-socat:
    container_name: jenkins-docker
    image: alpine/socat
    restart: unless-stopped
    networks:
      jenkins-pipeline:
        aliases:
          - docker
    expose:
      - "2375"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    command: tcp-listen:2375,fork,reuseaddr unix-connect:/var/run/docker.sock



  sonarqube:
    image: sonarqube
    container_name: sonarqube
    depends_on:
      - db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "9888:9000"

  db:
    image: postgres:12
    container_name: postgresdb
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data

volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
  postgresql_data:

networks:
  jenkins-pipeline: